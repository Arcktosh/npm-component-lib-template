{
  "compilerOptions": {
    "allowSyntheticDefaultImports": true, /* Allow 'import x from y' when a module doesn't have a default export. */
    "declaration": true, /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
    "esModuleInterop": true, /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */
    "jsx": "react-jsx", /* Specify what JSX code is generated. */
    "lib": [
      "es5",
      "es2015",
      "es2016",
      "dom",
      "esnext"
    ], /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "module": "es2015", /* Specify what module code is generated. */
    "moduleResolution": "node", /* Specify how TypeScript looks up a file from a given module specifier. */
    "noEmit": false,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true, /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noUnusedLocals": true, /* Enable error reporting when local variables aren't read. */
    "outDir": "./dist/esm", /* Specify an output folder for all emitted files. */
    "sourceMap": true, /* Create source map files for emitted JavaScript files. */
    "strict": true, /* Enable all strict type-checking options. */
    "skipLibCheck": true, /* Skip type checking all .d.ts files. */
    "target": "es6", /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
    "types": [
      "node"
    ], /* Specify type package names to be included without being referenced in a source file. */
  },
  "include": [
    "src/**/*.ts",
    "src/**/*.tsx"
  ]
}